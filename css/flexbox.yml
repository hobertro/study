---
- front: "What does flex-direction do?"
  back: "Specifies what direction the main axis runs in (what direction the flexbox children are laid out in)"
  tags: ["css", "flexbox"]
- front: "What does flex-direction: row do?"
  back: "Causes flexbox children to be laid out in a row in the direction of your browser's default language works (in the same direction as text direction, along the main axes)"
  tags: ["css", "flexbox"]
- front: "What does flex-direction: column do?"
  back: "Flexbox items are ordered the same way as the the text direction, along the cross axis."
  tags: ["css", "flexbox"]
- front: "What does flex-wrap do?"
  back: "Flex-wrap sets whether flex items are forced onto one line or can wrap onto multiple lines"
  tags: ["css", "flexbox"]
- front: "What does flex-wrap: wrap vs nowrap do? wrap-reverse?"
  back: "By default, flex-wwrap is nowrap. No wrap means the flex items will not wrap past the container and instead break into multiple lines, but wrap will allow overflow. Wrap reverse will wrap in the reverse order"
  tags: ["css", "flexbox"]
- front: "What does order do?"
  back: "It is a property of an item in a flex or grid container and dictates the order it appears in the container."
  tags: ["css", "flexbox"]
- front: "What does justify-content do?"
  back: "The CSS justify-content property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container."
  tags: ["css", "flexbox"]
- front: "What does justify-content: center do?"
  back: "The items are packed flush to each other toward the center of the alignment container along the main axis."
  tags: ["css", "flexbox"]
- front: "What does align-items do?"
  back: "The CSS align-items property sets the align-self value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis."
  tags: ["css", "flexbox"]
- front: "What does align-items: center do?"
  back: "The flex items' margin boxes are centered within the line on the cross-axis. If the cross-size of an item is larger than the flex container, it will overflow equally in both directions."
  tags: ["css", "flexbox"]
- front: "What does align-items: baseline do?"
  back: "All flex items are aligned such that their flex container baselines align."
  tags: ["css", "flexbox"]
- front: "What does align-content do?"
  back: "The CSS align-content property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis."
  tags: ["css", "flexbox"]
- front: "What does the flex property do?"
  back: "Answers the question of what you should do with extra space. At what proportion should I scale myself up or down when I have extra space or not enough space."
  tags: ["css", "flexbox"]
- front: "What does flex-basis do?"
  back: "It specifies the initial size of the flex item, before any available space is distributed according to the flex factors. "
  tags: ["css", "flexbox"]
- front: "What does flex-grow do?"
  back: "It dictates what amount of the available space inside the flex container the item should take up."
  tags: ["css", "flexbox"]
- front: "What does flex-shrink do?"
  back: "The flex-shrink CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink."
  tags: ["css", "flexbox"]
- front: "When is the alignment done for justify-content?"
  back: "The alignment is done after the lengths and auto margins are applied, meaning that, if in a Flexbox layout there is at least one flexible element, with flex-grow different from 0, it will have no effect as there won't be any available space."
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
- front: ""
  back: ""
  tags: ["css", "flexbox"]
